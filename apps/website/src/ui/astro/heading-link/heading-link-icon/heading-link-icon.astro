---
import type { HTMLTag, Polymorphic } from 'astro/types';
import { Icon } from 'astro-icon/components';
import { listenKeys } from 'nanostores';
import { twm } from '@/utilities/twm';
import { headingLinkIconStyles } from './heading-link-icon.styles';
import { getIconSize } from './utilities';
import { $headingLinkStore } from '../heading-link-store';

type Props<Tag extends HTMLTag = 'span'> = Polymorphic<{
  /**
   * Shorthand for changing the default rendered element into a semantically appropriate alternative.
   * @default "span"
   */
  as: Tag;
}>;

const { as: Tag = 'span', class: className, ...others } = Astro.props;

listenKeys($headingLinkStore, ['size'], () => {});
---

<Tag aria-hidden="true" class={twm(headingLinkIconStyles(), className)} {...others}>
  <slot>
    {$headingLinkStore.get().size && <Icon name="link" size={getIconSize($headingLinkStore.get().size)} />}
  </slot>
</Tag>
